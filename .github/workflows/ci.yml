name: Build Kontainers

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  TERM: dumb
  GRADLE_OPTS: "-Dorg.gradle.daemon=false"

jobs:
  build:
    name: Build & Check
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Gradle Cache
        id: cache-gradle-files
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build & Check
        run: |
          env
          trap "" SIGQUIT
          ./gradlew --no-daemon --continue check

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: unit-test-results
          path: ${{ github.workspace }}/**/build/test-results/**/*.xml
          if-no-files-found: error

  docker:
    name: Docker Integration Tests
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Gradle Cache
        id: cache-gradle-files
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Docker Integration Test
        run: ./gradlew --no-daemon dockerIntegrationTest

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: docker-itest-results
          path: ${{ github.workspace }}/**/build/test-results/**/*.xml
          if-no-files-found: error

  kubernetes:
    name: Kubernetes Cluster Integration Tests
    runs-on:
      - self-hosted
      - Linux
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Gradle Cache
        id: cache-gradle-files
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Kubernetes Integration Test
        run: |
          env
          trap "" SIGQUIT
          ./gradlew --no-daemon kubernetesIntegrationTest

      - name: Upload Test Results
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: kubernetes-itest-results
          path: ${{ github.workspace }}/**/build/test-results/**/*.xml
          if-no-files-found: error

  report:
    name: Report Checks
    runs-on: ubuntu-20.04
    if: always()
    needs:
      - build
      - docker
      - kubernetes
    steps:
      - name: Download Unit Tests
        uses: actions/download-artifact@v2
        with:
          name: unit-test-results

      - name: Download Docker Tests
        uses: actions/download-artifact@v2
        with:
          name: docker-itest-results

      - name: Download Kubernetes Tests
        uses: actions/download-artifact@v2
        with:
          name: kubernetes-itest-results

      - name: List files
        run: |
          ls -la
          find

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        with:
          files: "**/test-results/**/*.xml"

  publish:
    name: Publish
    if: github.event_name != 'pull_request'
    needs: report
    runs-on:
      - self-hosted
      - kubernetes
      - build
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Gradle Cache
        id: cache-gradle-files
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Publish
        env:
          ARTIFACTORY_DEPLOY: ${{ secrets.ARTIFACTORY_DEPLOY_KEY }}
        run: |
          trap "" SIGQUIT
          ./gradlew -x test publish
